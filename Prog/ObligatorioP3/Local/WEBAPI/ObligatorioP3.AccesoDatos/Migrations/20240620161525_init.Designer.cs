// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObligatorioP3.AccesoDatos.EF;

#nullable disable

namespace ObligatorioP3.AccesoDatos.Migrations
{
    [DbContext(typeof(ObligatorioP3Context))]
    [Migration("20240620161525_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Libreria.LogicaNegocio.Entidades.ParametrosConfigurables.Parametro", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nombre");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RUT")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.ComplexProperty<Dictionary<string, object>>("Direccion", "ObligatorioP3.LogicaNegocio.Entidades.Cliente.Direccion#Direccion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Ciudad")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Distancia")
                                .HasColumnType("float");

                            b1.Property<int>("Numero")
                                .HasColumnType("int");
                        });

                    b.HasKey("Id");

                    b.HasIndex("RUT")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.EntidadDeAutenticacion.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Contrasena", "ObligatorioP3.LogicaNegocio.Entidades.EntidadDeAutenticacion.Usuario.Contrasena#Contrasena", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("ContrasenaEncriptada")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ContrasenaNoEncriptada")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("NombreCompleto", "ObligatorioP3.LogicaNegocio.Entidades.EntidadDeAutenticacion.Usuario.NombreCompleto#NombreCompleto", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Apellido")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.MovimientoStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdTipo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("MovimientosDeStock");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Recargo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pedido");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.TipoDeMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aumento")
                        .HasColumnType("bit");

                    b.Property<int>("Coeficiente")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TiposDeMovimiento");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.PedidoComun", b =>
                {
                    b.HasBaseType("ObligatorioP3.LogicaNegocio.Entidades.Pedido");

                    b.HasDiscriminator().HasValue("PedidoComun");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.PedidoExpress", b =>
                {
                    b.HasBaseType("ObligatorioP3.LogicaNegocio.Entidades.Pedido");

                    b.Property<int>("PlazoExpress")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PedidoExpress");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.MovimientoStock", b =>
                {
                    b.HasOne("ObligatorioP3.LogicaNegocio.Entidades.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioP3.LogicaNegocio.Entidades.TipoDeMovimiento", "Tipo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioP3.LogicaNegocio.Entidades.EntidadDeAutenticacion.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Tipo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ObligatorioP3.LogicaNegocio.Entidades.Pedido", b =>
                {
                    b.HasOne("ObligatorioP3.LogicaNegocio.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("ObligatorioP3.LogicaNegocio.Entidades.AssosiationClasses.ArticulosPedido", "Lineas", b1 =>
                        {
                            b1.Property<int>("PedidoId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("ArticuloId")
                                .HasColumnType("int");

                            b1.Property<decimal>("PrecioUnitario")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<int>("Unidades")
                                .HasColumnType("int");

                            b1.HasKey("PedidoId", "Id");

                            b1.HasIndex("ArticuloId");

                            b1.ToTable("ArticulosPedido");

                            b1.HasOne("ObligatorioP3.LogicaNegocio.Entidades.Articulo", "Articulo")
                                .WithMany()
                                .HasForeignKey("ArticuloId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");

                            b1.Navigation("Articulo");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Lineas");
                });
#pragma warning restore 612, 618
        }
    }
}
